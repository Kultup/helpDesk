#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π Help Desk —Å–∏—Å—Ç–µ–º–∏
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è Linux/macOS —Å–µ—Ä–≤–µ—Ä—ñ–≤

set -e  # –ó—É–ø–∏–Ω–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ

echo "üöÄ –ü–æ—á–∞—Ç–æ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π Help Desk —Å–∏—Å—Ç–µ–º–∏..."

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–≤–æ–¥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Node.js
check_nodejs() {
    log_info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Node.js..."
    if ! command -v node &> /dev/null; then
        log_error "Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js 18.x..."
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js –¥–ª—è Ubuntu/Debian
        if command -v apt-get &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js –¥–ª—è CentOS/RHEL
        elif command -v yum &> /dev/null; then
            curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
            sudo yum install -y nodejs
        else
            log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Node.js. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤—Ä—É—á–Ω—É –∑ https://nodejs.org/"
            exit 1
        fi
    fi
    
    NODE_VERSION=$(node --version)
    NPM_VERSION=$(npm --version)
    log_success "Node.js –≤–µ—Ä—Å—ñ—è: $NODE_VERSION"
    log_success "npm –≤–µ—Ä—Å—ñ—è: $NPM_VERSION"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ MongoDB
check_mongodb() {
    log_info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ MongoDB..."
    if ! command -v mongod &> /dev/null; then
        log_warning "MongoDB –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è MongoDB 6.0..."
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è MongoDB –¥–ª—è Ubuntu/Debian
        if command -v apt-get &> /dev/null; then
            wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
            sudo apt-get update
            sudo apt-get install -y mongodb-org
            
            # –ó–∞–ø—É—Å–∫ MongoDB
            sudo systemctl start mongod
            sudo systemctl enable mongod
        else
            log_warning "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å MongoDB –≤—Ä—É—á–Ω—É –∑ https://docs.mongodb.com/manual/installation/"
        fi
    else
        log_success "MongoDB –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    fi
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PM2 –≥–ª–æ–±–∞–ª—å–Ω–æ
install_pm2() {
    log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PM2..."
    if ! command -v pm2 &> /dev/null; then
        npm install -g pm2
        log_success "PM2 –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    else
        log_success "PM2 –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    fi
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É
install_root_dependencies() {
    log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É..."
    npm install
    log_success "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π backend
install_backend_dependencies() {
    log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π backend..."
    cd backend
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è production –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    if [ "$NODE_ENV" = "production" ]; then
        npm ci --only=production
        log_success "Production –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ backend –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    else
        npm install
        log_success "–í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ backend –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    fi
    
    cd ..
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π frontend
install_frontend_dependencies() {
    log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π frontend..."
    cd frontend
    npm install
    log_success "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ frontend –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    cd ..
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
install_system_packages() {
    log_info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
    
    if command -v apt-get &> /dev/null; then
        # Ubuntu/Debian
        sudo apt-get update
        sudo apt-get install -y \
            curl \
            wget \
            git \
            build-essential \
            python3 \
            python3-pip \
            nginx \
            certbot \
            python3-certbot-nginx
        log_success "–°–∏—Å—Ç–µ–º–Ω—ñ –ø–∞–∫–µ—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (Ubuntu/Debian)"
    elif command -v yum &> /dev/null; then
        # CentOS/RHEL
        sudo yum update -y
        sudo yum groupinstall -y "Development Tools"
        sudo yum install -y \
            curl \
            wget \
            git \
            python3 \
            python3-pip \
            nginx \
            certbot \
            python3-certbot-nginx
        log_success "–°–∏—Å—Ç–µ–º–Ω—ñ –ø–∞–∫–µ—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (CentOS/RHEL)"
    else
        log_warning "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–∞–∫–µ—Ç–∏ –≤—Ä—É—á–Ω—É."
    fi
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
create_directories() {
    log_info "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π..."
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –ª–æ–≥—ñ–≤
    mkdir -p backend/logs
    mkdir -p frontend/logs
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å
    mkdir -p backend/uploads
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –±–µ–∫–∞–ø—ñ–≤
    mkdir -p /backup
    sudo chown $USER:$USER /backup
    
    log_success "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–æ"
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
setup_permissions() {
    log_info "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É..."
    
    # –ü—Ä–∞–≤–∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å —Ç–∞ –ª–æ–≥—ñ–≤
    chmod 755 backend/uploads
    chmod 755 backend/logs
    chmod 755 frontend/logs
    
    log_success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
verify_installation() {
    log_info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Node.js –º–æ–¥—É–ª—ñ–≤
    if [ -d "node_modules" ] && [ -d "backend/node_modules" ] && [ -d "frontend/node_modules" ]; then
        log_success "–í—Å—ñ Node.js –º–æ–¥—É–ª—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    else
        log_error "–î–µ—è–∫—ñ Node.js –º–æ–¥—É–ª—ñ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ PM2
    if command -v pm2 &> /dev/null; then
        log_success "PM2 –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"
    else
        log_error "PM2 –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        exit 1
    fi
    
    log_success "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    log_info "–ü–æ—á–∞—Ç–æ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
    check_nodejs
    check_mongodb
    install_system_packages
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    install_pm2
    install_root_dependencies
    install_backend_dependencies
    install_frontend_dependencies
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
    create_directories
    setup_permissions
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
    verify_installation
    
    echo ""
    log_success "üéâ –í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
    echo ""
    log_info "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:"
    echo "1. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤ backend/.env"
    echo "2. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤ frontend/.env"
    echo "3. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∏—Å—Ç–µ–º—É –∫–æ–º–∞–Ω–¥–æ—é: ./deploy.sh staging"
    echo ""
}

# –û–±—Ä–æ–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
while [[ $# -gt 0 ]]; do
    case $1 in
        --production)
            export NODE_ENV=production
            log_info "–†–µ–∂–∏–º: Production"
            shift
            ;;
        --development)
            export NODE_ENV=development
            log_info "–†–µ–∂–∏–º: Development"
            shift
            ;;
        --help)
            echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 [--production|--development] [--help]"
            echo ""
            echo "–û–ø—Ü—ñ—ó:"
            echo "  --production   –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ production –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ"
            echo "  --development  –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)"
            echo "  --help         –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É"
            exit 0
            ;;
        *)
            log_error "–ù–µ–≤—ñ–¥–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
            echo "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ --help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏"
            exit 1
            ;;
    esac
done

# –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
main
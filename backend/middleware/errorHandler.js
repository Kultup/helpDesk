const { errorLogger } = require('./logging');
const logger = require('../utils/logger');

// –ö–ª–∞—Å –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
class AppError extends Error {
  constructor(message, statusCode, isOperational = true) {
    super(message);
    this.statusCode = statusCode;
    this.isOperational = isOperational;
    this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error';
    
    Error.captureStackTrace(this, this.constructor);
  }
}

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ MongoDB
const handleMongoError = (err) => {
  if (err.name === 'CastError') {
    return new AppError(`–ù–µ–≤—ñ—Ä–Ω–∏–π ${err.path}: ${err.value}`, 400);
  }
  
  if (err.code === 11000) {
    const field = Object.keys(err.keyValue)[0];
    const value = err.keyValue[field];
    return new AppError(`${field} '${value}' –≤–∂–µ —ñ—Å–Ω—É—î`, 400);
  }
  
  if (err.name === 'ValidationError') {
    const errors = Object.values(err.errors).map(val => val.message);
    return new AppError(`–ü–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó: ${errors.join('. ')}`, 400);
  }
  
  return err;
};

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ JWT
const handleJWTError = () => {
  return new AppError('–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–æ–∫–µ–Ω. –ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –∑–Ω–æ–≤—É', 401);
};

const handleJWTExpiredError = () => {
  return new AppError('–¢–æ–∫–µ–Ω –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –∑–Ω–æ–≤—É', 401);
};

// –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–º–∏–ª–∫–∏ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ
const sendErrorDev = (err, res) => {
  res.status(err.statusCode).json({
    success: false,
    error: err,
    message: err.message,
    stack: err.stack
  });
};

// –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–º–∏–ª–∫–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω—ñ
const sendErrorProd = (err, res) => {
  // –û–ø–µ—Ä–∞—Ü—ñ–π–Ω—ñ –ø–æ–º–∏–ª–∫–∏: –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É
  if (err.isOperational) {
    res.status(err.statusCode).json({
      success: false,
      message: err.message
    });
  } else {
    // –ü—Ä–æ–≥—Ä–∞–º–Ω—ñ –ø–æ–º–∏–ª–∫–∏: –Ω–µ —Ä–æ–∑–∫—Ä–∏–≤–∞—î–º–æ –¥–µ—Ç–∞–ª—ñ
    logger.error('üí• –ü–û–ú–ò–õ–ö–ê:', err);
    
    res.status(500).json({
      success: false,
      message: '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!'
    });
  }
};

// –ì–æ–ª–æ–≤–Ω–∏–π middleware –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
const globalErrorHandler = (err, req, res, next) => {
  err.statusCode = err.statusCode || 500;
  err.status = err.status || 'error';
  
  // –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É
  errorLogger(err, req, res, () => {});
  
  if (process.env.NODE_ENV === 'development') {
    sendErrorDev(err, res);
  } else {
    let error = { ...err };
    error.message = err.message;
    
    // –û–±—Ä–æ–±–ª—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –ø–æ–º–∏–ª–æ–∫
    if (error.name === 'CastError' || error.name === 'ValidationError' || error.code === 11000) {
      error = handleMongoError(error);
    }
    
    if (error.name === 'JsonWebTokenError') {
      error = handleJWTError();
    }
    
    if (error.name === 'TokenExpiredError') {
      error = handleJWTExpiredError();
    }
    
    sendErrorProd(error, res);
  }
};

// Middleware –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–µ—ñ—Å–Ω—É—é—á–∏—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤
const notFoundHandler = (req, res, next) => {
  const err = new AppError(`–ú–∞—Ä—à—Ä—É—Ç ${req.originalUrl} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`, 404);
  next(err);
};

// Middleware –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö Promise rejection
const unhandledRejectionHandler = () => {
  process.on('unhandledRejection', (err, promise) => {
    logger.error('üí• –ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–µ Promise rejection:', err.name, err.message);
    logger.error('Promise:', promise);
    
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä gracefully
    process.exit(1);
  });
};

// Middleware –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –≤–∏–Ω—è—Ç–∫—ñ–≤
const uncaughtExceptionHandler = () => {
  process.on('uncaughtException', (err) => {
    logger.error('üí• –ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏–π –≤–∏–Ω—è—Ç–æ–∫:', err.name, err.message);
    logger.error(err.stack);
    
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø—Ä–æ—Ü–µ—Å –Ω–µ–≥–∞–π–Ω–æ
    process.exit(1);
  });
};

// Middleware –¥–ª—è graceful shutdown
const gracefulShutdownHandler = (server) => {
  const shutdown = (signal) => {
    logger.info(`\nüõë –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª ${signal}. –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä...`);
    
    server.close(() => {
      logger.info('‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–∫—Ä–∏—Ç–æ');
      process.exit(0);
    });
    
    // –ü—Ä–∏–º—É—Å–æ–≤–µ –∑–∞–∫—Ä–∏—Ç—Ç—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      logger.error('‚ùå –ü—Ä–∏–º—É—Å–æ–≤–µ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Ä–≤–µ—Ä–∞');
      process.exit(1);
    }, 10000);
  };
  
  process.on('SIGTERM', () => shutdown('SIGTERM'));
  process.on('SIGINT', () => shutdown('SIGINT'));
};

// Middleware –¥–ª—è –ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
const catchAsync = (fn) => {
  return (req, res, next) => {
    fn(req, res, next).catch(next);
  };
};

// Middleware –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—É
const validateResourceExists = (Model, resourceName = '–†–µ—Å—É—Ä—Å') => {
  return catchAsync(async (req, res, next) => {
    const resource = await Model.findById(req.params.id);
    
    if (!resource) {
      return next(new AppError(`${resourceName} –∑ ID ${req.params.id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`, 404));
    }
    
    req.resource = resource;
    next();
  });
};

// Middleware –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ä–µ—Å—É—Ä—Å—É
const checkResourceAccess = (resourceField = 'createdBy') => {
  return (req, res, next) => {
    const resource = req.resource;
    const user = req.user;
    
    // –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤
    if (user.role === 'admin') {
      return next();
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–ª–∞—Å–Ω—ñ—Å—Ç—å —Ä–µ—Å—É—Ä—Å—É
    const resourceOwnerId = resource[resourceField];
    
    if (!resourceOwnerId || resourceOwnerId.toString() !== user._id.toString()) {
      return next(new AppError('–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—å–æ–≥–æ —Ä–µ—Å—É—Ä—Å—É', 403));
    }
    
    next();
  };
};

module.exports = {
  AppError,
  globalErrorHandler,
  notFoundHandler,
  unhandledRejectionHandler,
  uncaughtExceptionHandler,
  gracefulShutdownHandler,
  catchAsync,
  validateResourceExists,
  checkResourceAccess
};
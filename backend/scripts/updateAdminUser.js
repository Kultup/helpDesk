const mongoose = require('mongoose');
require('dotenv').config();

async function updateAdminUser() {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/helpdesk');
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');

    const result = await mongoose.connection.db.collection('users').updateOne(
      { email: 'admin@test.com' },
      { 
        $set: { 
          position: new mongoose.Types.ObjectId('68d12f7dfcd8b34432b5f899'),
          city: new mongoose.Types.ObjectId('68d11daa8ee8dc826f3d8f37')
        }
      }
    );

    console.log('üìù –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', result);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const user = await mongoose.connection.db.collection('users').findOne({ email: 'admin@test.com' });
    console.log('üë§ –û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:', user);

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå –í—ñ–¥–∫–ª—é—á–µ–Ω–æ –≤—ñ–¥ MongoDB');
  }
}

updateAdminUser();
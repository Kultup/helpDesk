const mongoose = require('mongoose');
const User = require('../models/User');
const Position = require('../models/Position');
const City = require('../models/City');

async function fixAdmin() {
  try {
    console.log('–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB...');
    
    await mongoose.connect('mongodb://localhost:27017/helpdesk', {
      useNewUrlParser: true,
      useUnifiedTopology: true
    });
    
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const admin = await User.findOne({ email: 'admin@test.com' });
    if (!admin) {
      console.log('‚ùå –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π');
      return;
    }
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –º—ñ—Å—Ç–æ –ö–∏—ó–≤
    let city = await City.findOne({ name: '–ö–∏—ó–≤' });
    if (!city) {
      console.log('–°—Ç–≤–æ—Ä—é—é –º—ñ—Å—Ç–æ –ö–∏—ó–≤...');
      city = await City.create({
        name: '–ö–∏—ó–≤',
        region: '–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å',
        coordinates: { lat: 50.4501, lng: 30.5234 }
      });
    }
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    let position = await Position.findOne({ title: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º–∏' });
    if (!position) {
      console.log('–°—Ç–≤–æ—Ä—é—é –ø–æ–∑–∏—Ü—ñ—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
      position = await Position.create({
        title: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º–∏',
        description: '–°–∏—Å—Ç–µ–º–Ω–∏–π –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä Help Desk',
        department: 'IT –≤—ñ–¥–¥—ñ–ª',
        level: 'manager',
        category: 'general',
        permissions: [{
          module: 'all',
          actions: ['create', 'read', 'update', 'delete']
        }],
        createdBy: admin._id
      });
    }
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin.position = position._id;
    admin.city = city._id;
    
    await admin.save();
    
    console.log('‚úÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ');
    console.log('üìß Email:', admin.email);
    console.log('üèôÔ∏è –ú—ñ—Å—Ç–æ:', city.name);
    console.log('üíº –ü–æ–∑–∏—Ü—ñ—è:', position.title);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    const updatedAdmin = await User.findById(admin._id).populate('position city');
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞:');
    console.log('   Position populated:', !!updatedAdmin.position);
    console.log('   City populated:', !!updatedAdmin.city);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    mongoose.connection.close();
  }
}

fixAdmin();
const TelegramService = require('../services/telegramService');

// –ú–æ–∫ –¥–ª—è Telegram Bot API
class MockTelegramBot {
  constructor() {
    this.sentMessages = [];
  }

  async sendMessage(chatId, text, options = {}) {
    this.sentMessages.push({
      chatId,
      text,
      options,
      timestamp: new Date()
    });
    console.log(`üì§ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–æ ${chatId}: ${text.substring(0, 50)}...`);
    return { message_id: Math.floor(Math.random() * 1000) };
  }

  getLastMessage() {
    return this.sentMessages[this.sentMessages.length - 1];
  }

  clearMessages() {
    this.sentMessages = [];
  }
}

// –¢–µ—Å—Ç–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è —Å–∏–º—É–ª—è—Ü—ñ—ó –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –±–æ—Ç–æ–º
class BotInteractionTester {
  constructor() {
    this.telegramService = new TelegramService();
    this.mockBot = new MockTelegramBot();
    
    // –ó–∞–º—ñ–Ω—é—î–º–æ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –±–æ—Ç –Ω–∞ –º–æ–∫
    this.telegramService.bot = this.mockBot;
    
    this.testChatId = 12345;
    this.testUser = {
      id: 1,
      telegramId: this.testChatId,
      firstName: '–¢–µ—Å—Ç',
      lastName: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
      email: 'test@example.com',
      registrationStatus: 'approved'
    };
  }

  // –¢–µ—Å—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é
  async testMainMenuNavigation() {
    console.log('\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é...');
    
    // –û—á–∏—â—É—î–º–æ —Å—Ç–∞–Ω
    this.telegramService.userStates.delete(this.testChatId);
    this.mockBot.clearMessages();
    
    // –°–∏–º—É–ª—é—î–º–æ –∫–æ–º–∞–Ω–¥—É /start
    await this.telegramService.handleStartCommand(this.testChatId);
    
    let currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è /start: ${currentState}`);
    
    // –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ú–æ—ó —Ç—ñ–∫–µ—Ç–∏"
    console.log('üîò –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–ú–æ—ó —Ç—ñ–∫–µ—Ç–∏"...');
    await this.telegramService.handleMyTicketsCallback(this.testChatId, this.testUser);
    
    currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–ú–æ—ó —Ç—ñ–∫–µ—Ç–∏": ${currentState}`);
    
    // –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ù–∞–∑–∞–¥"
    console.log('üîô –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–ù–∞–∑–∞–¥"...');
    await this.telegramService.handleBackCallback(this.testChatId, this.testUser);
    
    currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–ù–∞–∑–∞–¥": ${currentState}`);
    
    let lastMessage = this.mockBot.getLastMessage();
    console.log(`üì§ –û—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${lastMessage?.text?.substring(0, 30)}...`);
  }

  // –¢–µ—Å—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç—É
  async testCreateTicketNavigation() {
    console.log('\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç—É...');
    
    // –û—á–∏—â—É—î–º–æ —Å—Ç–∞–Ω
    this.telegramService.userStates.delete(this.testChatId);
    this.mockBot.clearMessages();
    
    // –ü–æ—á–∏–Ω–∞—î–º–æ –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    this.telegramService.pushState(this.testChatId, 'main');
    
    // –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç"
    console.log('üîò –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç"...');
    await this.telegramService.handleCreateTicketCallback(this.testChatId, this.testUser);
    
    let currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç": ${currentState}`);
    
    // –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ù–∞–∑–∞–¥"
    console.log('üîô –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–ù–∞–∑–∞–¥"...');
    await this.telegramService.handleBackCallback(this.testChatId, this.testUser);
    
    currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–ù–∞–∑–∞–¥": ${currentState}`);
    
    let lastMessage = this.mockBot.getLastMessage();
    console.log(`üì§ –û—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${lastMessage?.text?.substring(0, 30)}...`);
  }

  // –¢–µ—Å—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
  async testRegistrationNavigation() {
    console.log('\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó...');
    
    // –û—á–∏—â—É—î–º–æ —Å—Ç–∞–Ω
    this.telegramService.userStates.delete(this.testChatId);
    this.telegramService.userSessions.delete(this.testChatId);
    this.mockBot.clearMessages();
    
    // –ü–æ—á–∏–Ω–∞—î–º–æ –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)
    this.telegramService.pushState(this.testChatId, 'main');
    
    // –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è"
    console.log('üîò –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è"...');
    await this.telegramService.handleRegisterCallback(this.testChatId, null);
    
    let currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è": ${currentState}`);
    
    let session = this.telegramService.userSessions.get(this.testChatId);
    console.log(`üìù –°–µ—Å—ñ—è: ${JSON.stringify(session)}`);
    
    // –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ù–∞–∑–∞–¥" –ø—ñ–¥ —á–∞—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
    console.log('üîô –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–ù–∞–∑–∞–¥" –ø—ñ–¥ —á–∞—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó...');
    await this.telegramService.handleBackCallback(this.testChatId, null);
    
    currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–ù–∞–∑–∞–¥": ${currentState}`);
    
    let sessionAfter = this.telegramService.userSessions.get(this.testChatId);
    console.log(`üìù –°–µ—Å—ñ—è –ø—ñ—Å–ª—è "–ù–∞–∑–∞–¥": ${sessionAfter || '–≤–∏–¥–∞–ª–µ–Ω–∞'}`);
    
    let lastMessage = this.mockBot.getLastMessage();
    console.log(`üì§ –û—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${lastMessage?.text?.substring(0, 30)}...`);
  }

  // –¢–µ—Å—Ç –æ–±—Ä–æ–±–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å "–ù–∞–∑–∞–¥"
  async testTextBackMessages() {
    console.log('\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å "–ù–∞–∑–∞–¥"...');
    
    // –û—á–∏—â—É—î–º–æ —Å—Ç–∞–Ω
    this.telegramService.userStates.delete(this.testChatId);
    this.mockBot.clearMessages();
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
    this.telegramService.pushState(this.testChatId, 'main');
    this.telegramService.pushState(this.testChatId, 'my_tickets');
    
    let currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω: ${currentState}`);
    
    // –°–∏–º—É–ª—é—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "üîô –ù–∞–∑–∞–¥"
    console.log('üí¨ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ–∫—Å—Ç "üîô –ù–∞–∑–∞–¥"...');
    
    // –ú–æ–∫–∞—î–º–æ –æ–±'—î–∫—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const mockMessage = {
      chat: { id: this.testChatId },
      text: 'üîô –ù–∞–∑–∞–¥',
      from: { id: this.testChatId }
    };
    
    await this.telegramService.handleMessage(mockMessage);
    
    currentState = this.telegramService.getCurrentState(this.testChatId);
    console.log(`üìç –°—Ç–∞–Ω –ø—ñ—Å–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ "–ù–∞–∑–∞–¥": ${currentState}`);
    
    let lastMessage = this.mockBot.getLastMessage();
    console.log(`üì§ –û—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${lastMessage?.text?.substring(0, 30)}...`);
  }

  // –ó–∞–ø—É—Å–∫ –≤—Å—ñ—Ö —Ç–µ—Å—Ç—ñ–≤
  async runAllTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –±–æ—Ç–æ–º...\n');
    
    try {
      await this.testMainMenuNavigation();
      await this.testCreateTicketNavigation();
      await this.testRegistrationNavigation();
      await this.testTextBackMessages();
      
      console.log('\n‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –≤–∑–∞—î–º–æ–¥—ñ—ó –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
      console.log(`üìä –í—Å—å–æ–≥–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: ${this.mockBot.sentMessages.length}`);
    } catch (error) {
      console.error('\n‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∑–∞—î–º–æ–¥—ñ—ó:', error);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏
const tester = new BotInteractionTester();
tester.runAllTests();
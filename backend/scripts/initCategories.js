const mongoose = require('mongoose');
require('dotenv').config();

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/helpdesk', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const Category = require('../models/Category');
const User = require('../models/User');

const initialCategories = [
  {
    name: 'technical',
    description: '–¢–µ—Ö–Ω—ñ—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è–º',
    color: '#3498DB',
    icon: 'wrench',
    sortOrder: 1,
    isActive: true
  },
  {
    name: 'account',
    description: '–ü–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –æ–±–ª—ñ–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤',
    color: '#9B59B6',
    icon: 'user',
    sortOrder: 2,
    isActive: true
  },
  {
    name: 'billing',
    description: '–§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏',
    color: '#E67E22',
    icon: 'credit-card',
    sortOrder: 3,
    isActive: true
  },
  {
    name: 'general',
    description: '–ó–∞–≥–∞–ª—å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –∑–∞–ø–∏—Ç–∏',
    color: '#95A5A6',
    icon: 'info-circle',
    sortOrder: 4,
    isActive: true
  }
];

async function initCategories() {
  try {
    console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ—Å–Ω—É—é—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    const existingCategories = await Category.find();
    
    if (existingCategories.length > 0) {
      console.log('‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∂–µ —ñ—Å–Ω—É—é—Ç—å –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö');
      console.log(`üìä –ó–Ω–∞–π–¥–µ–Ω–æ ${existingCategories.length} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:`);
      existingCategories.forEach(cat => {
        console.log(`   - ${cat.name} (${cat.isActive ? '–∞–∫—Ç–∏–≤–Ω–∞' : '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'})`);
      });
      return;
    }

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—è createdBy
    const admin = await User.findOne({ role: 'admin' });
    if (!admin) {
      console.log('‚ö†Ô∏è  –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –±–µ–∑ –ø—Ä–∏–≤\'—è–∑–∫–∏ –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
      // –¢–∏–º—á–∞—Å–æ–≤–æ —Ä–æ–±–∏–º–æ –ø–æ–ª–µ createdBy –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º
      const CategoryModel = mongoose.model('Category');
      CategoryModel.schema.path('createdBy').required(false);
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    for (const categoryData of initialCategories) {
      if (admin) {
        categoryData.createdBy = admin._id;
      }
      const category = new Category(categoryData);
      await category.save();
      console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: ${category.name}`);
    }

    console.log('üéâ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:', error);
  } finally {
    mongoose.connection.close();
  }
}

// –ó–∞–ø—É—Å–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
initCategories();
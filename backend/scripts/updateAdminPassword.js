const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('../models/User');

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
mongoose.connect('mongodb://localhost:27017/helpdesk', {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

async function updateAdminPassword() {
  try {
    console.log('–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB...');
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const user = await User.findOne({ email: 'admin@test.com' });
    
    if (!user) {
      console.log('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      return;
    }
    
    console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–Ω–∞–π–¥–µ–Ω–∏–π:', user.email);
    
    // –•–µ—à—É—î–º–æ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
    const hashedPassword = await bcrypt.hash('admin123', 12);
    console.log('üîê –ü–∞—Ä–æ–ª—å –∑–∞—Ö–µ—à–æ–≤–∞–Ω–∏–π');
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –ø–∞—Ä–æ–ª—å –Ω–∞–ø—Ä—è–º—É –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    await User.findByIdAndUpdate(user._id, { 
      password: hashedPassword 
    });
    
    console.log('‚úÖ –ü–∞—Ä–æ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    const updatedUser = await User.findById(user._id);
    const isValid = await bcrypt.compare('admin123', updatedUser.password);
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è:', isValid ? '‚úÖ –£—Å–ø—ñ—à–Ω–æ' : '‚ùå –ü–æ–º–∏–ª–∫–∞');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    mongoose.connection.close();
  }
}

updateAdminPassword();
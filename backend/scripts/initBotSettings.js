require('dotenv').config();
const database = require('../config/database');
const BotSettings = require('../models/BotSettings');

(async () => {
  try {
    await database.connect();

    const existing = await BotSettings.findOne({ key: 'default' });
    if (existing) {
      console.log('BotSettings already exists. Skipping initialization.');
      console.log(JSON.stringify(existing.toObject(), null, 2));
      process.exit(0);
    }

    const settings = new BotSettings({
      key: 'default',
      cancelButtonText: '‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏',
      categoryPromptText: '–ö—Ä–æ–∫ 4/5: –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:',
      priorityPromptText: '–ö—Ä–æ–∫ 5/5: –û–±–µ—Ä—ñ—Ç—å –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç:',
      categoryButtonRowSize: 2,
      priorityTexts: new Map([
        ['low', 'üü¢ –ù–∏–∑—å–∫–∏–π'],
        ['medium', 'üü° –°–µ—Ä–µ–¥–Ω—ñ–π'],
        ['high', 'üî¥ –í–∏—Å–æ–∫–∏–π']
      ]),
      statusTexts: new Map([
        ['open', '–í—ñ–¥–∫—Ä–∏—Ç–∏–π'],
        ['in_progress', '–í —Ä–æ–±–æ—Ç—ñ'],
        ['pending', '–û—á—ñ–∫—É—î'],
        ['resolved', '–í–∏—Ä—ñ—à–µ–Ω–∏–π'],
        ['closed', '–ó–∞–∫—Ä–∏—Ç–∏–π']
      ]),
      statusEmojis: new Map([
        ['open', 'üÜï'],
        ['in_progress', '‚öôÔ∏è'],
        ['pending', '‚è≥'],
        ['resolved', '‚úÖ'],
        ['closed', 'üîí']
      ])
    });

    await settings.save();
    console.log('BotSettings initialized successfully');
    console.log(JSON.stringify(settings.toObject(), null, 2));
    await database.disconnect();
    process.exit(0);
  } catch (error) {
    console.error('Failed to initialize BotSettings:', error);
    process.exit(1);
  }
})();
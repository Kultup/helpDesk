// –°–ø—Ä–æ—â–µ–Ω–∏–π —Ç–µ—Å—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –±–µ–∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

class SimpleNavigationTester {
  constructor() {
    // –Ü–º—ñ—Ç—É—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏ TelegramService
    this.userStates = new Map();
    this.userSessions = new Map();
  }

  // –ú–µ—Ç–æ–¥–∏ —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ç–∞–Ω–∞–º–∏ (–∫–æ–ø—ñ—è –∑ TelegramService)
  pushState(chatId, state) {
    if (!this.userStates.has(chatId)) {
      this.userStates.set(chatId, []);
    }
    this.userStates.get(chatId).push(state);
  }

  popState(chatId) {
    const states = this.userStates.get(chatId);
    if (states && states.length > 0) {
      return states.pop();
    }
    return null;
  }

  getCurrentState(chatId) {
    const states = this.userStates.get(chatId);
    return states && states.length > 0 ? states[states.length - 1] : 'main';
  }

  // –Ü–º—ñ—Ç–∞—Ü—ñ—è handleBackCallback
  handleBackCallback(chatId) {
    console.log(`üîô handleBackCallback –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è chatId: ${chatId}`);
    
    // –í–∏–¥–∞–ª—è—î–º–æ —Å–µ—Å—ñ—é
    this.userSessions.delete(chatId);
    console.log(`üóëÔ∏è –°–µ—Å—ñ—è –≤–∏–¥–∞–ª–µ–Ω–∞ –¥–ª—è chatId: ${chatId}`);
    
    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É
    this.popState(chatId);
    const currentState = this.getCurrentState(chatId);
    console.log(`üìç –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ—Å–ª—è "–ù–∞–∑–∞–¥": ${currentState}`);
    
    return currentState;
  }

  // –¢–µ—Å—Ç –ø–æ–≤–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  testFullNavigationScenario() {
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó...\n');
    
    const testChatId = 12345;
    
    // –°—Ü–µ–Ω–∞—Ä—ñ–π 1: –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é -> –ú–æ—ó —Ç—ñ–∫–µ—Ç–∏ -> –ù–∞–∑–∞–¥
    console.log('üìã –°—Ü–µ–Ω–∞—Ä—ñ–π 1: –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é -> –ú–æ—ó —Ç—ñ–∫–µ—Ç–∏ -> –ù–∞–∑–∞–¥');
    this.userStates.delete(testChatId);
    
    this.pushState(testChatId, 'main');
    console.log(`  üìç –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω: ${this.getCurrentState(testChatId)}`);
    
    this.pushState(testChatId, 'my_tickets');
    console.log(`  üìç –ü—ñ—Å–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ "–ú–æ—ó —Ç—ñ–∫–µ—Ç–∏": ${this.getCurrentState(testChatId)}`);
    
    const stateAfterBack1 = this.handleBackCallback(testChatId);
    console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${stateAfterBack1 === 'main' ? '–ü–†–û–ô–î–ï–ù–û' : '–ü–†–û–í–ê–õ–ï–ù–û'}\n`);
    
    // –°—Ü–µ–Ω–∞—Ä—ñ–π 2: –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é -> –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç -> –ù–∞–∑–∞–¥
    console.log('üìã –°—Ü–µ–Ω–∞—Ä—ñ–π 2: –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é -> –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç -> –ù–∞–∑–∞–¥');
    this.userStates.delete(testChatId);
    
    this.pushState(testChatId, 'main');
    this.pushState(testChatId, 'create_ticket');
    console.log(`  üìç –ü—ñ—Å–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç": ${this.getCurrentState(testChatId)}`);
    
    const stateAfterBack2 = this.handleBackCallback(testChatId);
    console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${stateAfterBack2 === 'main' ? '–ü–†–û–ô–î–ï–ù–û' : '–ü–†–û–í–ê–õ–ï–ù–û'}\n`);
    
    // –°—Ü–µ–Ω–∞—Ä—ñ–π 3: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ —Å–µ—Å—ñ—î—é -> –ù–∞–∑–∞–¥
    console.log('üìã –°—Ü–µ–Ω–∞—Ä—ñ–π 3: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ —Å–µ—Å—ñ—î—é -> –ù–∞–∑–∞–¥');
    this.userStates.delete(testChatId);
    this.userSessions.delete(testChatId);
    
    this.pushState(testChatId, 'main');
    this.pushState(testChatId, 'registration');
    this.userSessions.set(testChatId, {
      action: 'registration',
      step: 'firstName',
      data: {}
    });
    
    console.log(`  üìç –°—Ç–∞–Ω —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${this.getCurrentState(testChatId)}`);
    console.log(`  üìù –°–µ—Å—ñ—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${this.userSessions.has(testChatId) ? '–¢–ê–ö' : '–ù–Ü'}`);
    
    const stateAfterBack3 = this.handleBackCallback(testChatId);
    const sessionDeleted = !this.userSessions.has(testChatId);
    
    console.log(`  ‚úÖ –°—Ç–∞–Ω –ø—ñ—Å–ª—è "–ù–∞–∑–∞–¥": ${stateAfterBack3}`);
    console.log(`  ‚úÖ –°–µ—Å—ñ—è –≤–∏–¥–∞–ª–µ–Ω–∞: ${sessionDeleted ? '–¢–ê–ö' : '–ù–Ü'}`);
    console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${stateAfterBack3 === 'main' && sessionDeleted ? '–ü–†–û–ô–î–ï–ù–û' : '–ü–†–û–í–ê–õ–ï–ù–û'}\n`);
    
    // –°—Ü–µ–Ω–∞—Ä—ñ–π 4: –ì–ª–∏–±–æ–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
    console.log('üìã –°—Ü–µ–Ω–∞—Ä—ñ–π 4: –ì–ª–∏–±–æ–∫–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è (main -> my_tickets -> create_ticket -> settings)');
    this.userStates.delete(testChatId);
    
    this.pushState(testChatId, 'main');
    this.pushState(testChatId, 'my_tickets');
    this.pushState(testChatId, 'create_ticket');
    this.pushState(testChatId, 'settings');
    
    console.log(`  üìç –ì–ª–∏–±–æ–∫–∏–π —Å—Ç–∞–Ω: ${this.getCurrentState(testChatId)}`);
    
    // –ü–µ—Ä—à–∏–π "–ù–∞–∑–∞–¥"
    let state = this.handleBackCallback(testChatId);
    console.log(`  üìç –ü—ñ—Å–ª—è 1-–≥–æ "–ù–∞–∑–∞–¥": ${state} (–æ—á—ñ–∫—É—î—Ç—å—Å—è: create_ticket)`);
    
    // –î—Ä—É–≥–∏–π "–ù–∞–∑–∞–¥"
    state = this.handleBackCallback(testChatId);
    console.log(`  üìç –ü—ñ—Å–ª—è 2-–≥–æ "–ù–∞–∑–∞–¥": ${state} (–æ—á—ñ–∫—É—î—Ç—å—Å—è: my_tickets)`);
    
    // –¢—Ä–µ—Ç—ñ–π "–ù–∞–∑–∞–¥"
    state = this.handleBackCallback(testChatId);
    console.log(`  üìç –ü—ñ—Å–ª—è 3-–≥–æ "–ù–∞–∑–∞–¥": ${state} (–æ—á—ñ–∫—É—î—Ç—å—Å—è: main)`);
    
    // –ß–µ—Ç–≤–µ—Ä—Ç–∏–π "–ù–∞–∑–∞–¥" (–∑ –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ —Å—Ç–µ–∫—É)
    state = this.handleBackCallback(testChatId);
    console.log(`  üìç –ü—ñ—Å–ª—è 4-–≥–æ "–ù–∞–∑–∞–¥": ${state} (–æ—á—ñ–∫—É—î—Ç—å—Å—è: main)`);
    
    console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${state === 'main' ? '–ü–†–û–ô–î–ï–ù–û' : '–ü–†–û–í–ê–õ–ï–ù–û'}\n`);
  }

  // –¢–µ—Å—Ç –∫—Ä–∞–π–æ–≤–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤
  testEdgeCases() {
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫—Ä–∞–π–æ–≤–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤...\n');
    
    const testChatId = 99999;
    
    // –í–∏–ø–∞–¥–æ–∫ 1: "–ù–∞–∑–∞–¥" –±–µ–∑ —Å—Ç–∞–Ω—ñ–≤
    console.log('üìã –í–∏–ø–∞–¥–æ–∫ 1: "–ù–∞–∑–∞–¥" –±–µ–∑ —Å—Ç–∞–Ω—ñ–≤');
    this.userStates.delete(testChatId);
    
    const stateWithoutStates = this.handleBackCallback(testChatId);
    console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${stateWithoutStates === 'main' ? '–ü–†–û–ô–î–ï–ù–û' : '–ü–†–û–í–ê–õ–ï–ù–û'}\n`);
    
    // –í–∏–ø–∞–¥–æ–∫ 2: "–ù–∞–∑–∞–¥" –∑ –æ–¥–Ω–∏–º —Å—Ç–∞–Ω–æ–º
    console.log('üìã –í–∏–ø–∞–¥–æ–∫ 2: "–ù–∞–∑–∞–¥" –∑ –æ–¥–Ω–∏–º —Å—Ç–∞–Ω–æ–º');
    this.userStates.delete(testChatId);
    this.pushState(testChatId, 'main');
    
    const stateWithOneState = this.handleBackCallback(testChatId);
    console.log(`  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${stateWithOneState === 'main' ? '–ü–†–û–ô–î–ï–ù–û' : '–ü–†–û–í–ê–õ–ï–ù–û'}\n`);
    
    // –í–∏–ø–∞–¥–æ–∫ 3: –ú–Ω–æ–∂–∏–Ω–Ω—ñ –≤–∏–∫–ª–∏–∫–∏ "–ù–∞–∑–∞–¥"
    console.log('üìã –í–∏–ø–∞–¥–æ–∫ 3: –ú–Ω–æ–∂–∏–Ω–Ω—ñ –≤–∏–∫–ª–∏–∫–∏ "–ù–∞–∑–∞–¥"');
    this.userStates.delete(testChatId);
    this.pushState(testChatId, 'main');
    this.pushState(testChatId, 'my_tickets');
    
    for (let i = 1; i <= 5; i++) {
      const state = this.handleBackCallback(testChatId);
      console.log(`  üìç ${i}-–π –≤–∏–∫–ª–∏–∫ "–ù–∞–∑–∞–¥": ${state}`);
    }
    
    console.log(`  ‚úÖ –í—Å—ñ –≤–∏–∫–ª–∏–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—è –±–µ–∑ –ø–æ–º–∏–ª–æ–∫\n`);
  }

  // –ó–∞–ø—É—Å–∫ –≤—Å—ñ—Ö —Ç–µ—Å—Ç—ñ–≤
  runAllTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–ø—Ä–æ—â–µ–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó...\n');
    
    try {
      this.testFullNavigationScenario();
      this.testEdgeCases();
      
      console.log('‚úÖ –í—Å—ñ —Å–ø—Ä–æ—â–µ–Ω—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏
const tester = new SimpleNavigationTester();
tester.runAllTests();
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π Help Desk —Å–∏—Å—Ç–µ–º–∏
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è Windows —Å–µ—Ä–≤–µ—Ä—ñ–≤

param(
    [switch]$Production,
    [switch]$Development,
    [switch]$Help
)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—ñ–≤
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
$Colors = @{
    Red = "Red"
    Green = "Green"
    Yellow = "Yellow"
    Blue = "Blue"
    White = "White"
}

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤–∏–≤–æ–¥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
function Write-Info {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor $Colors.Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor $Colors.Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor $Colors.Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor $Colors.Red
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Node.js
function Test-NodeJS {
    Write-Info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Node.js..."
    
    try {
        $nodeVersion = node --version
        $npmVersion = npm --version
        Write-Success "Node.js –≤–µ—Ä—Å—ñ—è: $nodeVersion"
        Write-Success "npm –≤–µ—Ä—Å—ñ—è: $npmVersion"
        return $true
    }
    catch {
        Write-Error "Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        Write-Info "–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Node.js –∑ https://nodejs.org/"
        Write-Info "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è: 18.x LTS"
        return $false
    }
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ MongoDB
function Test-MongoDB {
    Write-Info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ MongoDB..."
    
    try {
        $mongoVersion = mongod --version
        Write-Success "MongoDB –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        return $true
    }
    catch {
        Write-Warning "MongoDB –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
        Write-Info "–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å MongoDB –∑ https://www.mongodb.com/try/download/community"
        Write-Info "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è: 6.0+"
        return $false
    }
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Chocolatey (–ø–∞–∫–µ—Ç–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è Windows)
function Install-Chocolatey {
    Write-Info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Chocolatey..."
    
    try {
        choco --version | Out-Null
        Write-Success "Chocolatey –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
    catch {
        Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Chocolatey..."
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        Write-Success "Chocolatey –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤ —á–µ—Ä–µ–∑ Chocolatey
function Install-SystemPackages {
    Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
    
    $packages = @(
        "git",
        "python3",
        "visualstudio2019buildtools",
        "nodejs",
        "mongodb"
    )
    
    foreach ($package in $packages) {
        try {
            Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è $package..."
            choco install $package -y
            Write-Success "$package –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        }
        catch {
            Write-Warning "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ $package"
        }
    }
}


# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PM2 –≥–ª–æ–±–∞–ª—å–Ω–æ
function Install-PM2 {
    Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è PM2..."
    
    try {
        pm2 --version | Out-Null
        Write-Success "PM2 –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
    catch {
        npm install -g pm2
        Write-Success "PM2 –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è cross-env –≥–ª–æ–±–∞–ª—å–Ω–æ
function Install-CrossEnv {
    Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è cross-env..."
    
    try {
        npm install -g cross-env
        Write-Success "cross-env –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
    catch {
        Write-Warning "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ cross-env"
    }
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É
function Install-RootDependencies {
    Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É..."
    
    try {
        npm install
        Write-Success "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
    catch {
        Write-Error "–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É"
        throw
    }
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π backend
function Install-BackendDependencies {
    Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π backend..."
    
    try {
        Set-Location backend
        
        if ($Production) {
            npm ci --only=production
            Write-Success "Production –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ backend –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        }
        else {
            npm install
            Write-Success "–í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ backend –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        }
        
        Set-Location ..
    }
    catch {
        Write-Error "–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π backend"
        Set-Location ..
        throw
    }
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π frontend
function Install-FrontendDependencies {
    Write-Info "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π frontend..."
    
    try {
        Set-Location frontend
        npm install
        Write-Success "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ frontend –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        Set-Location ..
    }
    catch {
        Write-Error "–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π frontend"
        Set-Location ..
        throw
    }
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
function New-ProjectDirectories {
    Write-Info "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π..."
    
    $directories = @(
        "backend\logs",
        "frontend\logs",
        "backend\uploads",
        "backup"
    )
    
    foreach ($dir in $directories) {
        if (!(Test-Path $dir)) {
            New-Item -ItemType Directory -Path $dir -Force | Out-Null
            Write-Success "–°—Ç–≤–æ—Ä–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é: $dir"
        }
        else {
            Write-Info "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –≤–∂–µ —ñ—Å–Ω—É—î: $dir"
        }
    }
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
function Test-Installation {
    Write-Info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è..."
    
    $errors = @()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Node.js –º–æ–¥—É–ª—ñ–≤
    if (!(Test-Path "node_modules") -or !(Test-Path "backend\node_modules") -or !(Test-Path "frontend\node_modules")) {
        $errors += "–î–µ—è–∫—ñ Node.js –º–æ–¥—É–ª—ñ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ PM2
    try {
        pm2 --version | Out-Null
    }
    catch {
        $errors += "PM2 –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    }
    
    if ($errors.Count -eq 0) {
        Write-Success "–í—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
        return $true
    }
    else {
        foreach ($error in $errors) {
            Write-Error $error
        }
        return $false
    }
}

# –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
function Show-Help {
    Write-Host @"
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π Help Desk —Å–∏—Å—Ç–µ–º–∏

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
    .\install-dependencies.ps1 [–ø–∞—Ä–∞–º–µ—Ç—Ä–∏]

–ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
    -Production     –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ production –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    -Development    –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    -Help          –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É

–ü—Ä–∏–∫–ª–∞–¥–∏:
    .\install-dependencies.ps1
    .\install-dependencies.ps1 -Production
    .\install-dependencies.ps1 -Development

"@ -ForegroundColor $Colors.White
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
function Main {
    if ($Help) {
        Show-Help
        return
    }
    
    Write-Info "üöÄ –ü–æ—á–∞—Ç–æ–∫ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π Help Desk —Å–∏—Å—Ç–µ–º–∏..."
    
    try {
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–∂–∏–º—É
        if ($Production) {
            $env:NODE_ENV = "production"
            Write-Info "–†–µ–∂–∏–º: Production"
        }
        else {
            $env:NODE_ENV = "development"
            Write-Info "–†–µ–∂–∏–º: Development"
        }
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
        if (!(Test-NodeJS)) {
            throw "Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        }
        
        Test-MongoDB
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤
        Install-Chocolatey
        Install-PM2
        Install-CrossEnv
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        Install-RootDependencies
        Install-BackendDependencies
        Install-FrontendDependencies
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
        New-ProjectDirectories
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
        if (Test-Installation) {
            Write-Host ""
            Write-Success "üéâ –í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
            Write-Host ""
            Write-Info "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:"
            Write-Host "1. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤ backend\.env"
            Write-Host "2. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤ frontend\.env"
            Write-Host "3. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∏—Å—Ç–µ–º—É –∫–æ–º–∞–Ω–¥–æ—é: .\deploy.sh staging"
            Write-Host ""
        }
        else {
            throw "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—è –∑ –ø–æ–º–∏–ª–∫–∞–º–∏"
        }
    }
    catch {
        Write-Error "–ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è: $_"
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
Main